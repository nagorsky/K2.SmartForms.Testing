<#@ template language="C#" debug="True" #>
<#@ import namespace="System.Collections.Generic" #>
using System;
using System.Text;
 
namespace GeneratedCode
{
    internal class <#= this.ClassName #>
    {
        public <#= this.ClassName #>()
        {
            Console.WriteLine("ctor");
        }
 
<# foreach(var prop in this.ClassProperties) {#>
        <#= String.Format("public {0} {1} {{ get; set; }}", prop.Key, prop.Value) #>
<#}#>
 
        public override string ToString()
        {
            StringBuilder result = new StringBuilder();
 
<# foreach(var prop in this.ClassProperties) {#>
            result.AppendFormat("{0} = {1}", "<#= prop.Value #>", this.<#= prop.Value #>);
<#}#>       
            return String.Format("<#= this.ClassName #>() {{ {0} }}", result.ToString());
        }
    }
}
<#+ string ClassName = "MyClass"; #>
<#+ Dictionary<string, string> ClassProperties = new Dictionary<string, string>{
    {"string", "StringProperty"},
    {"int", "IntProperty"}
    }; #>